# -*- coding: utf-8 -*-

"""
rootcollection

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from tests.test_helper import TestHelper
from rootcollection.api_helper import APIHelper
from rootcollection.models.sign_up_agent_request import SignUpAgentRequest
from rootcollection.models.delete_locataire_request import DeleteLocataireRequest
from rootcollection.models.reject_locataire_request import RejectLocataireRequest
from rootcollection.models.adminrequest import Adminrequest


class SignupControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(SignupControllerTests, cls).setUpClass()
        cls.controller = cls.client.signup
        cls.response_catcher = cls.controller.http_call_back

    # Todo: Add description for test test_signup_new_locataire
    def test_signup_new_locataire(self):
        # Parameters for the API call
        name = 'mohamed'
        family_name = 'gouaouri'
        email = 'im_gouaouri@esi.dz'
        phone_number = 0777112233
        password = 'password'
        personal_photo = ''
        photo_identity = ''

        # Perform the API call through the SDK function
        self.controller.signup_new_locataire(name, family_name, email, phone_number, password, personal_photo, photo_identity)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

    # Todo: Add description for test test_sign_up_agent
    def test_sign_up_agent(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"name":"agent1","family_name":"agent2","email":"agent1@nexcode.dz'
            '","phone_number":"077766556665","password":"password"}', SignUpAgentRequest.from_dictionary)

        # Perform the API call through the SDK function
        self.controller.sign_up_agent(body)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

    # Todo: Add description for test test_validate_locataire
    def test_validate_locataire(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"email":"im_gouaouri@esi.dz"}', DeleteLocataireRequest.from_dictionary)

        # Perform the API call through the SDK function
        self.controller.validate_locataire(body)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

    # Todo: Add description for test test_reject_locataire
    def test_reject_locataire(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"email":"im_gouaouri@esi.dz","justificatif":"Une justification pa'
            'r l admin"}', RejectLocataireRequest.from_dictionary)

        # Perform the API call through the SDK function
        self.controller.reject_locataire(body)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

    # Todo: Add description for test test_admin
    def test_admin(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"name":"admin","family_name":"admin","email":"admin@nexcode.dz","'
            'password":"password"}', Adminrequest.from_dictionary)

        # Perform the API call through the SDK function
        self.controller.admin(body)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

    # Todo: Add description for test test_decideur
    def test_decideur(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"name":"decideur2","family_name":"decideur1","email":"decideur1@n'
            'excode.dz","phone_number":"077766556665","password":"password"}', SignUpAgentRequest.from_dictionary)

        # Perform the API call through the SDK function
        self.controller.decideur(body)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)


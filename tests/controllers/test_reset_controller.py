# -*- coding: utf-8 -*-

"""
rootcollection

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from tests.test_helper import TestHelper
from rootcollection.api_helper import APIHelper
from rootcollection.models.delete_locataire_request import DeleteLocataireRequest
from rootcollection.models.reset_password_locataire_request import ResetPasswordLocataireRequest
from rootcollection.models.forgot_password_am_request import ForgotPasswordAMRequest


class ResetControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(ResetControllerTests, cls).setUpClass()
        cls.controller = cls.client.reset
        cls.response_catcher = cls.controller.http_call_back

    # Todo: Add description for test test_forgot_password_locataire
    def test_forgot_password_locataire(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"email":"dou@esi.dz"}', DeleteLocataireRequest.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.forgot_password_locataire(body)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = None
        expected_headers['x-powered-by'] = None
        expected_headers['access-control-allow-origin'] = None
        expected_headers['content-length'] = None
        expected_headers['etag'] = None
        expected_headers['date'] = None
        expected_headers['connection'] = None
        expected_headers['keep-alive'] = None

        self.assertTrue(TestHelper.match_headers(expected_headers, self.response_catcher.response.headers))

        
        # Test whether the captured response is as we expected
        self.assertIsNotNone(result)
        expected_body = APIHelper.json_deserialize('{"message":"password reset link sent to your email account"}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        self.assertTrue(TestHelper.match_body(expected_body, received_body))

    # Todo: Add description for test test_reset_password_locataire
    def test_reset_password_locataire(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"password":"resetreset"}', ResetPasswordLocataireRequest.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.reset_password_locataire(body)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = None
        expected_headers['x-powered-by'] = None
        expected_headers['access-control-allow-origin'] = None
        expected_headers['content-length'] = None
        expected_headers['etag'] = None
        expected_headers['date'] = None
        expected_headers['connection'] = None
        expected_headers['keep-alive'] = None

        self.assertTrue(TestHelper.match_headers(expected_headers, self.response_catcher.response.headers))

        
        # Test whether the captured response is as we expected
        self.assertIsNotNone(result)
        expected_body = APIHelper.json_deserialize('{"message":"password reset sucessfully."}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        self.assertTrue(TestHelper.match_body(expected_body, received_body))

    # Todo: Add description for test test_forgot_password_am
    def test_forgot_password_am(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"email":"id_bouloudene@esi.dz"}', ForgotPasswordAMRequest.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.forgot_password_am(body)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = None
        expected_headers['x-powered-by'] = None
        expected_headers['access-control-allow-origin'] = None
        expected_headers['content-length'] = None
        expected_headers['etag'] = None
        expected_headers['date'] = None
        expected_headers['connection'] = None
        expected_headers['keep-alive'] = None

        self.assertTrue(TestHelper.match_headers(expected_headers, self.response_catcher.response.headers))

        
        # Test whether the captured response is as we expected
        self.assertIsNotNone(result)
        expected_body = APIHelper.json_deserialize('{"message":"password reset link sent to your email account","succe'
            'ss":true}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        self.assertTrue(TestHelper.match_body(expected_body, received_body))

    # Todo: Add description for test test_reset_password_am
    def test_reset_password_am(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"password":"resetreset"}', ResetPasswordLocataireRequest.from_dictionary)

        # Perform the API call through the SDK function
        self.controller.reset_password_am(body)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

